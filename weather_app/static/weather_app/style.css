@font-face {
    font-family: 'BebasNeue';
    src: url("../fonts/BebasNeue-Bold_1.woff") format("woff");
    font-weight: 700;
    font-style: normal;
}

@font-face {
    font-family: 'BebasNeue';
    src: url("../fonts/BebasNeue-Regular_0.woff") format("woff");
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: 'Blogger';
    src: url("../fonts/Blogger-Sans-Medium.woff") format("woff");
    font-style: normal;
    font-weight: 500;
}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
    line-height: 1.15;
    /* 1 */
    -webkit-text-size-adjust: 100%;
    /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
    margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
    display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
    font-size: 2em;
    margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
    box-sizing: content-box;
    /* 1 */
    height: 0;
    /* 1 */
    overflow: visible;
    /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
    font-family: monospace, monospace;
    /* 1 */
    font-size: 1em;
    /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
    background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
    border-bottom: none;
    /* 1 */
    text-decoration: underline;
    /* 2 */
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
    /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
    font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
    font-family: monospace, monospace;
    /* 1 */
    font-size: 1em;
    /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
    font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
    border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
    font-family: inherit;
    /* 1 */
    font-size: 100%;
    /* 1 */
    line-height: 1.15;
    /* 1 */
    margin: 0;
    /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
    /* 1 */
    overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
    /* 1 */
    text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
    -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
    padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
    box-sizing: border-box;
    /* 1 */
    color: inherit;
    /* 2 */
    display: table;
    /* 1 */
    max-width: 100%;
    /* 1 */
    padding: 0;
    /* 3 */
    white-space: normal;
    /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
    vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
    overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
    box-sizing: border-box;
    /* 1 */
    padding: 0;
    /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
    height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
    -webkit-appearance: textfield;
    /* 1 */
    outline-offset: -2px;
    /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
    -webkit-appearance: button;
    /* 1 */
    font: inherit;
    /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
    display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
    display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
    display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
    display: none;
}

*,
*::before,
*::after {
    box-sizing: inherit;
    webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    -webkit-tap-highlight-color: transparent;
}

html {
    box-sizing: border-box;
    max-width: 575px;
    margin: 0 auto;
}

body {
    color: #fff;
    font-family: 'Montserrat', sans-serif;
    height: 100vh;
    font-weight: 400;
    position: relative;
    overflow-x: hidden;
    text-align: center;
    background-image: -webkit-gradient(linear, left bottom, left top, from(#00c6fb), to(#005bea));
    background-image: linear-gradient(to top, #00c6fb 0%, #005bea 100%);
}

.w100 {
    width: 100%;
}

b, strong {
    font-weight: 500;
}

img {
    max-width: 100%;
}

a, button, .text {
    outline: none;
    border: 0;
    cursor: pointer;
    background: none;
    -webkit-transition: 220ms;
    transition: 220ms;
    text-decoration: none;
}

h1, h2, h3, h4, h5, h6 {
    margin: 0;
}

.blick-btn {
    position: relative;
    cursor: pointer;
    overflow: hidden;
    -webkit-transition: ease 0.3s;
    transition: ease 0.3s;
}

.blick-btn:after {
    opacity: 0;
    content: "";
    display: block;
    width: 25px;
    height: 350px;
    margin-left: 60px;
    background: #fff;
    position: absolute;
    left: -120px;
    top: -150px;
    z-index: 1;
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg);
    -webkit-transition: all 0.1s;
    transition: all 0.1s;
}

.blick-btn:after {
    opacity: 1;
    -webkit-animation-name: slideme;
    animation-name: slideme;
    -webkit-animation-duration: 3s;
    animation-duration: 3s;
    -webkit-animation-delay: 0.05s;
    animation-delay: 0.05s;
    -webkit-animation-timing-function: ease-in-out;
    animation-timing-function: ease-in-out;
    -webkit-animation-iteration-count: infinite;
    animation-iteration-count: infinite;
}

@-webkit-keyframes slideme {
    0% {
        left: -60px;
        margin-left: 0px;
    }
    30% {
        left: 110%;
        margin-left: 80px;
    }
    100% {
        left: 110%;
        margin-left: 80px;
    }
}

@keyframes slideme {
    0% {
        left: -60px;
        margin-left: 0px;
    }
    30% {
        left: 110%;
        margin-left: 80px;
    }
    100% {
        left: 110%;
        margin-left: 80px;
    }
}

.btn-grad {
    background-image: -webkit-gradient(linear, left top, right top, from(#ECE9E6), color-stop(51%, #FFFFFF), to(#ECE9E6));
    background-image: linear-gradient(to right, #ECE9E6 0%, #FFFFFF 51%, #ECE9E6 100%);
}

.btn-grad {
    text-align: center;
    text-transform: uppercase;
    -webkit-transition: 0.5s;
    transition: 0.5s;
    background-size: 200% auto;
    border-radius: 10px;
    border: 0;
    font-size: 20px;
    padding: 25px 60px;
    font-weight: 500;
}

.btn-grad:hover {
    background-position: right center;
    /* change the direction of the change here */
    text-decoration: none;
}

.title {
    color: #fff;
    text-transform: uppercase;
    font-size: 1.3rem;
}

.logo {
    text-transform: uppercase;
    font-size: 1.8rem;
    font-weight: 700;
    display: block;
    text-align: center;
}

.subtitle {
    color: #fff;
    font-size: 1.1rem;
}

.section {
    display: none;
}

.intro-section {
    display: block;
}

.intro-section img {
    max-width: 70%;
    margin: 5vh auto;
}

.intro-section .button {
    margin: 15px 0 0;
}

.city-section .centered {
    margin-top: 150px;
}

.city-section input {
    margin: 20px 0 60px;
    background: none;
    border: 0;
    border-bottom: 2px solid #fff;
    padding-left: 0;
    color: #fff;
    font-size: 1.2rem;
}

.city-section input::-webkit-input-placeholder {
    color: rgba(255, 255, 255, 0.7);
}

.city-section input::-moz-placeholder {
    color: rgba(255, 255, 255, 0.7);
}

.city-section input:-ms-input-placeholder {
    color: rgba(255, 255, 255, 0.7);
}

.city-section input::-ms-input-placeholder {
    color: rgba(255, 255, 255, 0.7);
}

.city-section input::placeholder {
    color: rgba(255, 255, 255, 0.7);
}

.home-section {
    text-align: left;
    padding-top: 20px;
}

.home-section .logo {
    font-size: 1.5rem;
}

.home-section .title {
    text-transform: none;
    margin: 10px 0;
    font-weight: 600;
    font-size: 1.3rem;
    line-height: 1.2;
}

.home-section .title span {
    font-weight: 400;
}

.home-section .home__header {
    display: -webkit-box;
    display: flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    justify-content: space-between;
}

.home-section .home__header .menu-btn {
    width: 28px;
}

.home-section .home__features {
    margin-top: 100px;
}

.home-section .home__clothes {
    margin-top: 100px;
}

.home-section .home__clothes ul {
    list-style: disc;
    padding-left: 20px;
}

.home-section .home__clothes ul li {
    font-size: 1.3rem;
}

.overlay {
    display: none;
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: 99;
    background: rgba(0, 0, 0, 0.85);
}

.modal {
    display: none;
    z-index: 100;
    position: fixed;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    background: #fff;
}

.modal__close {
    position: absolute;
    right: 2.5rem;
    top: 2.5rem;
    z-index: 7;
    cursor: pointer;
    -webkit-transition: 220ms;
    transition: 220ms;
}

.modal__close:hover {
    -webkit-transform: scale(1.1);
    transform: scale(1.1);
}

.modal__close .img-svg {
    width: 2rem;
    height: 2rem;
}

.modal__close .img-svg path {
    stroke: #000;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
